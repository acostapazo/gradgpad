name: ci

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - 'VERSION'
    branches: 
      - master
  push:
    paths-ignore:
      - '*.md'
      - 'VERSION'
    branches:
      - master


jobs:
  ci:

    strategy:
      max-parallel: 4
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}
      - name: Install dependencies
        run: |
          pip install lume
          lume -install
      - name: Lint
        run: lume -lint
      - name: Check Requirements
        run: lume -check-requirements
      - name: Static Analysis
        run: lume -static-analysis
      - name: Tests
        run: lume -build -test
      - uses: codecov/codecov-action@v2
        with:
          files: output/coverage/cobertur_coverage.xml
          name: gradgpad
          fail_ci_if_error: true
      - name: Check Installation (--no-binary)
        run: |
          pip install wheel
          python setup.py sdist
          pip wheel --no-binary gradgpad -w /tmp/ext dist/gradgpad-*.tar.gz
